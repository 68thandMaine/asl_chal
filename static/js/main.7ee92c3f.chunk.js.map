{"version":3,"sources":["common/geoJsonData.ts","components/map/DrawToolBar.tsx","utils/TurfUtils.ts","components/map/LeafletMap.tsx","components/notification/Notification.tsx","views/Dashboard.tsx","components/button/Button.tsx","components/input/Label.tsx","components/input/Input.tsx","components/input/LabeledInput.tsx","components/menu/Menu.tsx","common/initialState.ts","App.tsx","reportWebVitals.js","index.tsx"],"names":["dmaCoords","type","features","properties","geometry","coordinates","DrawToolbar","determineNotification","context","useLeafletContext","container","layerContainer","map","useMap","DrawControl","createControlComponent","Control","Draw","position","draw","polyline","polygon","allowIntersection","drawError","color","message","shapeOptions","circle","rectangle","marker","circlemarker","edit","featureGroup","remove","controlRef","useRef","useEffect","on","Event","CREATED","e","current","layer","addLayer","intersection","flightLayer","controlledZone","flightCoordinates","toGeoJSON","intersect","findIntersection","TOOLBAROPENED","removeLayer","LeafletMap","createNotification","controlledAirspace","closeNotification","mapCoordinates","mapUrl","MapContainer","center","zoom","zoomControl","scrollWheelZoom","touchZoom","doubleClickZoom","id","TileLayer","url","GeoJSON","data","FeatureGroup","DrawToolBar","areaOfIntersect","area","convertArea","toFixed","getArea","StyledNotification","styled","section","Notification","props","MenuWrapper","article","Dashboard","leftPane","rightPane","className","StyledButton","button","Button","buttonText","StyledLabel","label","Label","labelText","StyledInput","input","Input","placeholderText","inputType","placeholder","StyledLabeledInput","div","LabeledInput","StyledMenu","Menu","notificationData","initialState","startingCoordinates","notification","showNotification","App","useState","state","setState","approval","msg","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ee92c3f.chunk.js","sourcesContent":["const geoJsonData: GeoJSON.FeatureCollection<any> = {\n\ttype: \"FeatureCollection\",\n\tfeatures: [\n\t\t{\n\t\t\ttype: \"Feature\",\n\t\t\tproperties: {},\n\t\t\tgeometry: {\n\t\t\t\ttype: \"Polygon\",\n\t\t\t\tcoordinates: [\n\t\t\t\t\t[\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-83.35447311401367,\n\t\t\t\t\t\t\t42.23982914405\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-83.38743209838867,\n\t\t\t\t\t\t\t42.20995654939329\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-83.37146759033203,\n\t\t\t\t\t\t\t42.18452193135192\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-83.3536148071289,\n\t\t\t\t\t\t\t42.18719304724962\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-83.32340240478514,\n\t\t\t\t\t\t\t42.19380675326742\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-83.31430435180664,\n\t\t\t\t\t\t\t42.23118661249613\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-83.34932327270508,\n\t\t\t\t\t\t\t42.24160834186122\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t-83.35447311401367,\n\t\t\t\t\t\t\t42.23982914405\n\t\t\t\t\t\t]\n\t\t\t\t\t]\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t]\n}\n\nexport default geoJsonData;","import React, { useEffect, useRef } from 'react';\nimport { Draw, Control, Layer } from 'leaflet';\nimport { createControlComponent, useLeafletContext } from '@react-leaflet/core';\nimport { useMap } from 'react-leaflet';\nimport 'leaflet-draw';\nimport { findIntersection } from '../../utils/TurfUtils';\nimport { GeoJsonProperties } from 'geojson';\nimport geoJSONData from '../../common/geoJsonData';\nconst dmaCoords = geoJSONData.features[0].geometry.coordinates;\n\n\nfunction getControlOptions(editableLayer : any): Control.DrawConstructorOptions {\n\treturn (\n\t\t{\n\t\t\tposition: 'topleft',\n\t\t\tdraw: {\n\t\t\t\t\tpolyline:false,\n\t\t\t\t\tpolygon:\n\t\t\t\t\t {\n\t\t\t\t\t\t\tallowIntersection: false, // Restricts shapes to simple polygons\n\t\t\t\t\t\t\tdrawError: {\n\t\t\t\t\t\t\t\t\tcolor: '#e1e100', // Color the shape will turn when intersects\n\t\t\t\t\t\t\t\t\tmessage: '<strong>Oh snap!<strong> you can\\'t draw that!' // Message that will show when intersect\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tshapeOptions: {\n\t\t\t\t\t\t\t\t\tcolor: '#bada55'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tcircle: false,\n\t\t\t\t\trectangle: false,\n\t\t\t\t\tmarker: false,\n\t\t\t\t\tcirclemarker: false,\n\t\t\t},\n\t\t\tedit: {\n\t\t\t\tfeatureGroup: editableLayer,\n\t\t\t\tremove: false,\n\t\t\t}\n\t\t}\n\t)\n}\n\ninterface IDrawToolbar {\n\tdetermineNotification(intersection: GeoJsonProperties): any ;\n}\n\nfunction DrawToolbar({determineNotification}:IDrawToolbar) {\n\tconst context = useLeafletContext();\n\tconst container = context.layerContainer || context.map;\n\tconst map = useMap();\n\tconst DrawControl = createControlComponent(() => new Control.Draw(getControlOptions(container)));\n\tconst controlRef = useRef<Layer | any>();\n\t\n\tuseEffect(() => {\t\n\t\tmap.on(Draw.Event.CREATED, (e) => {\n\t\t\tcontrolRef.current = e.layer;\n\t\t\tif (controlRef.current !== null) {\n\t\t\t\tcontainer.addLayer(controlRef.current);\n\t\t\t\tlet intersection = findIntersection(controlRef.current, dmaCoords)\n\t\t\t\tdetermineNotification(intersection)\n\t\t\t}\n\t\t})\n\n\t\tmap.on(Draw.Event.TOOLBAROPENED, (e) => {\n\t\t\tcontainer.removeLayer(controlRef.current);\n\t\t});\n\t}, [controlRef, map, container, determineNotification]);\n\t\n\treturn <DrawControl/>\n}\n\nexport default DrawToolbar;\n","import  { \n\tintersect, \n\tpolygon, \n\tFeature,\n\tarea,\n} from '@turf/turf';\nimport { convertArea } from '@turf/helpers';\nimport { FeatureGroup } from 'leaflet';\n\nexport function findIntersection(flightLayer: FeatureGroup, controlledZone: any, ): Feature | null {\n\tconst layer: any = flightLayer.toGeoJSON();\n\tconst flightCoordinates = layer.geometry.coordinates;\n\tconst intersection = intersect(polygon(controlledZone), polygon\n\t(flightCoordinates))\n\n\treturn intersection;\n}\n\nexport function getArea(data: any): string {\n\tconst { geometry } = data;\n\tconst coordinates = geometry.coordinates;\n\tconst areaOfIntersect = area(polygon(coordinates));\n\tconst convertedArea = convertArea(areaOfIntersect, 'meters', 'kilometers')\n\treturn convertedArea.toFixed(2)\n}\n\n","import React from 'react';\nimport { MapContainer, TileLayer, GeoJSON, FeatureGroup } from 'react-leaflet';\nimport 'leaflet-draw';\nimport DrawToolBar from './DrawToolBar';\nimport { FeatureCollection } from '@turf/turf';\nimport { getArea } from '../../utils/TurfUtils';\nimport { LatLng } from 'leaflet';\n\ntype LeafletMapProps = {\n\tcreateNotification: (approval: boolean, area?: string) => void;\n\tcloseNotification: () => void;\n\tmapCoordinates: LatLng;\n\tmapUrl: string;\n\tcontrolledAirspace: GeoJSON.FeatureCollection\n}\n\nconst LeafletMap: React.FC<LeafletMapProps> = ({ \n\tcreateNotification,\n\tcloseNotification,\n\tcontrolledAirspace,\n\tmapCoordinates,\n\tmapUrl,\n}) => {\n\t\n\tfunction onReceiveData(data: FeatureCollection) {\n\t\tif (data !== null ) {\n\t\t\tcreateNotification(false, getArea(data))\n\t\t} else {\n\t\t\tcreateNotification(true)\n\t\t}\n\t}\n\t\n\t\n\treturn (\n\t\t<MapContainer\n\t\t\tcenter={mapCoordinates}\n\t\t\tzoom={13}\n\t\t\tzoomControl={true}\n\t\t\tscrollWheelZoom={false}\n\t\t\ttouchZoom={false}\n\t\t\tdoubleClickZoom={false}\n\t\t\tid=\"leafletMap__wrapper\"\n\t\t>\n\t\t\t<TileLayer\n\t\t\t\turl={mapUrl} \n\t\t\t/>\n\t\t\t<GeoJSON\n\t\t\t\tdata={controlledAirspace}\n\t\t\t/>\n\t\t\t<FeatureGroup>\n\t\t\t\t<DrawToolBar\n\t\t\t\t\tdetermineNotification={onReceiveData}\n\t\t\t\t/>\n\t\t\t</FeatureGroup>\n\t\t</MapContainer>\n\t)\n}\n\nexport default LeafletMap;","import React from 'react';\nimport styled from 'styled-components'\n\ninterface INotification {\n\tmessage: string;\n}\n\nconst StyledNotification = styled.section`\n\tbackground: white;\n\ttext-align: center;\n`;\n\nconst Notification: React.FC<INotification> = (props) => {\n\treturn (\n\t\t<StyledNotification>\n\t\t\t<h1>{props.message}</h1>\n\t\t</StyledNotification>\n\t)\n};\n// \nexport default Notification;","import React, { Children, ReactChild } from 'react';\nimport styled from 'styled-components';\n\nconst MenuWrapper= styled.article`\nposition: relative;\nz-index: 2;\nbox-shadow: -10px 0px 15px -1px rgba(68, 68, 68, 0.6);\n`;\n\n\ntype DashboardProps ={\n\tleftPane: ReactChild;\n\trightPane: ReactChild\n }\n\nconst Dashboard: React.FC<DashboardProps> = ({ leftPane, rightPane }) => {\n\n\treturn (\n\t\t<section className=\"grid grid-cols-7\">\n\t\t\t<article className=\"col-span-5 relative gap-0.5 z-0\">\n\t\t\t\t{leftPane}\n\t\t\t</article>\n\t\t\t<MenuWrapper className=\"col-span-2 rounded-l-lg\">\n\t\t\t\t{rightPane}\n\t\t\t</MenuWrapper>\n\t\t</section>\n\t);\n}\n\nexport default Dashboard;","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledButton = styled.button`\n\tbackground: #F2AB6D;\n\tcolor:#fff;\n\tborder-radius: 2em;\n\toutline: none;\n\twidth: 160px;\n\tmargin: 1em;\n\t&:focus {\n\t\toutline: 0;\n\t}\n`;\n\ntype ButtonProps = {\n\tbuttonText: string\n}\n\nconst Button: React.FC<ButtonProps> = ({buttonText}) => {\n\treturn (\n\t\t<StyledButton>{buttonText}</StyledButton>\n\t)\n}\n\nexport default Button;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledLabel = styled.label`\n\tfont-size: 1.25rem;\n\tfont-weight: 450;\n\tdisplay: block;\n\ttext-align: left;\n\tmargin-bottom: 0.25em;\n\tpadding-left: 0.5em;\n`;\n\ntype LabelProps = {\n\tlabelText: string;\n}\n\nconst Label: React.FC<LabelProps> = ({labelText}) => {\n\n\treturn (\n\t\t<StyledLabel>\n\t\t\t{labelText}\n\t\t</StyledLabel>\n\t)\n}\n\nexport default Label;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledInput = styled.input`\n\t&::placeholder {\n\t\tfont-style: italic;\n\t\t\n\t};\n\tborder: solid 3px #0367A6;\n\tborder-radius: 2em;\n\toutline: none;\n\tpadding: 0 10px ;\n\twidth: 100%;\n\tpadding: 5px 14px;\n`;\n\ntype InputProps = {\n\tplaceholderText?: string;\n\tinputType: string;\n}\n\nconst Input: React.FC<InputProps> = ({placeholderText, inputType}) => {\n\n\treturn (\n\t\t<StyledInput className={`styledInput__${inputType}`} placeholder={placeholderText} type={inputType}>\n\t\t</StyledInput>\n\t)\n}\n\nexport default Input;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Label from './Label';\nimport Input from './Input';\n\nconst StyledLabeledInput = styled.div`\n\tmargin: 16px auto;\n`;\n\ntype LabeledInputProps = {\n\tlabelText: string;\n\tplaceholderText?: string;\n\tinputType: string\n}\n\nconst LabeledInput: React.FC<LabeledInputProps> = ({labelText, placeholderText, inputType}) => {\n\n\treturn (\n\t\t<StyledLabeledInput>\n\t\t\t<Label \n\t\t\t\tlabelText={labelText} />\n\t\t\t<Input \n\t\t\t\tplaceholderText={placeholderText}\n\t\t\t\tinputType={inputType}/>\n\t\t</StyledLabeledInput>\n\t)\n}\n\nexport default LabeledInput;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { INotification } from '../../common/types';\nimport Button from '../button/Button';\nimport Notification from '../notification/Notification';\nimport LabeledInput from '../input/LabeledInput';\n\nconst StyledMenu = styled.article`\n\tdisplay: grid;\n\tgrid-template-rows: 1fr 1fr 1fr;\n\theight: 100vh;\n\tpadding: 1em;\n\ttext-align: center;\n`;\n\ntype MenuProps = {\n\tnotificationData: INotification;\n}\n\nconst Menu: React.FC<MenuProps> = ({notificationData}) => {\n\treturn (\n\t\t<StyledMenu>\n\t\t\t<div >\n\t\t\t\t<h1>Airspace Link</h1>\n\t\t\t\t<h2 className=\"styledMenu__title\">Engineering Challenge</h2>\n\t\t\t\t<p className='text-justify'>Use this application to determine if the flight for your drone will be approved or not.</p>\n\t\t\t\n\t\t\t<section>\n\t\t\t\t<LabeledInput \n\t\t\t\t\tlabelText=\"Location Name\"\n\t\t\t\t\tplaceholderText=\"Detroit Metropolitan Airport...\"\n\t\t\t\t\tinputType=\"text\"/>\n\t\t\t\t<section className=\"flex flex-row space-between\">\n\t\t\t\t\t<LabeledInput\n\t\t\t\t\t\tlabelText=\"Lat\"\n\t\t\t\t\t\tplaceholderText=\"42.197\"\n\t\t\t\t\t\tinputType=\"number\"/>\n\t\t\t\t\t<LabeledInput\n\t\t\t\t\t\tlabelText=\"Long\"\n\t\t\t\t\t\tplaceholderText=\"-83.349\"\n\t\t\t\t\t\tinputType=\"number\" />\n\t\t\t\t</section>\n\t\t\t\t<Button \n\t\t\t\t\tbuttonText=\"Search\"/>\n\t\t\t</section>\n\t\t\t</div>\n\t\t\t<Notification \n\t\t\t\tmessage={notificationData.message}/>\n\t\t</StyledMenu>\n\t)\n}\n\nexport default Menu;","const initialState:any = {\n\tmap: {\n\t\tstartingCoordinates: [42.197, -83.349],\n\t\tcontrolledAirspace: {\n\t\t\ttype: \"FeatureCollection\",\n\t\t\tfeatures: [\n\t\t\t\t{\n\t\t\t\t\ttype: \"Feature\",\n\t\t\t\t\tproperties: {},\n\t\t\t\t\tgeometry: {\n\t\t\t\t\t\ttype: \"Polygon\",\n\t\t\t\t\t\tcoordinates: [\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t-83.35447311401367,\n\t\t\t\t\t\t\t\t\t42.23982914405\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t-83.38743209838867,\n\t\t\t\t\t\t\t\t\t42.20995654939329\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t-83.37146759033203,\n\t\t\t\t\t\t\t\t\t42.18452193135192\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t-83.3536148071289,\n\t\t\t\t\t\t\t\t\t42.18719304724962\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t-83.32340240478514,\n\t\t\t\t\t\t\t\t\t42.19380675326742\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t-83.31430435180664,\n\t\t\t\t\t\t\t\t\t42.23118661249613\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t-83.34932327270508,\n\t\t\t\t\t\t\t\t\t42.24160834186122\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t-83.35447311401367,\n\t\t\t\t\t\t\t\t\t42.23982914405\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\tmapUrl: \"http://{s}.tile.osm.org/{z}/{x}/{y}.png\",\n\t},\n\tnotification: {\n\t\tshowNotification: false,\n\t\tmessage: \"\",\n\t}\n}\n\nexport default initialState;","import React, { useState } from 'react';\nimport './App.css';\nimport './tailwind.css';\nimport LeafletMap from './components/map/LeafletMap';\nimport Notification from './components/notification/Notification';\nimport Dashboard from './views/Dashboard';\nimport Menu from './components/menu/Menu';\nimport initialState from './common/initialState';\nimport { IStateMap } from './common/types';\n\nfunction App() {\n\tlet [state, setState] = useState<IStateMap>(initialState)\n\t\n\tconst renderNotification = () => {\n\t\treturn (\n\t\t\t<Notification\n\t\t\t\tmessage={state.notification.message}\n\t\t\t/>\n\t\t)\n\t}\n\n\tfunction onShowNotification(approval: boolean, area?: string) {\n\t\tlet msg = approval ? \"Good news! Your flight has been approved.\" : `Your flight breaches about ${area} kms of controlled airspace. Please try to find another route.`;\n\t\tsetState({\n      ...state,\n      notification: {\n        message: msg,\n\t\t\t\tshowNotification: true\t\n      }\n\t\t});\n\t}\n\n\tfunction onCloseNotification(){\n\t\tsetState((prevState) => ({\n\t\t\t...prevState,\n\t\t\tnotification: {\n\t\t\t\tshowNotification: false,\n\t\t\t\tmessage: \"\",\n\t\t\t}\n\t\t}));\n\t}\n\n\treturn (\n\t\t<Dashboard\n\t\t\tleftPane={\n\t\t\t\t<LeafletMap\n\t\t\t\t\tmapCoordinates={state.map.startingCoordinates}\n\t\t\t\t\tmapUrl={state.map.mapUrl}\n\t\t\t\t\tcreateNotification={onShowNotification}\n\t\t\t\t\tcloseNotification={onCloseNotification}\n\t\t\t\t\tcontrolledAirspace={state.map.controlledAirspace}\n\t\t\t\t/>\n\t\t\t}\n\t\t\trightPane={\n\t\t\t\t<Menu\n\t\t\t\t\tnotificationData={state.notification}\n\t\t\t\t/>\n\t\t\t}\n\t\t>\n\t\t</Dashboard>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n\t\t<App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}